import jsPDF from 'jspdf';

interface PassportData {
  tokenId: string;
  product_name?: string;
  batch_id?: string;
  manufacturer?: string;
  esgScore?: number;
  esgStatus?: 'sustainable' | 'needs-improvement';
  esgData?: {
    carbon_footprint_kg: number;
    total_distance_km: number;
    co2_saved_vs_traditional: number;
    impact_message: string;
    total_steps: number;
  };
}

export const generatePassportPDF = (data: PassportData): void => {
  const doc = new jsPDF();
  
  // Header
  doc.setFillColor(75, 0, 130);
  doc.rect(0, 0, 210, 40, 'F');
  
  doc.setTextColor(255, 255, 255);
  doc.setFontSize(24);
  doc.setFont('helvetica', 'bold');
  doc.text('BLOCKTRACE', 20, 25);
  
  doc.setFontSize(14);
  doc.setFont('helvetica', 'normal');
  doc.text('Digital Supply Chain Passport', 20, 35);
  
  // Certificate Title
  doc.setTextColor(0, 0, 0);
  doc.setFontSize(20);
  doc.setFont('helvetica', 'bold');
  doc.text('DIGITAL CERTIFICATE', 105, 60, { align: 'center' });
  
  // Passport ID
  doc.setFontSize(16);
  doc.setFont('helvetica', 'normal');
  doc.text(`Passport ID: #${data.tokenId}`, 105, 75, { align: 'center' });
  
  // Product Details
  doc.setFontSize(12);
  doc.setFont('helvetica', 'bold');
  doc.text('Product Information:', 20, 100);
  
  doc.setFont('helvetica', 'normal');
  const yStart = 115;
  let yPos = yStart;
  
  if (data.product_name) {
    doc.text(`Product Name: ${data.product_name}`, 20, yPos);
    yPos += 10;
  }
  
  if (data.batch_id) {
    doc.text(`Batch ID: ${data.batch_id}`, 20, yPos);
    yPos += 10;
  }
  
  if (data.manufacturer) {
    doc.text(`Manufacturer: ${data.manufacturer}`, 20, yPos);
    yPos += 10;
  }
  
  // ESG Badge and Details
  if (data.esgScore !== undefined && data.esgData) {
    yPos += 10;
    doc.setFont('helvetica', 'bold');
    doc.text('ESG Sustainability Assessment:', 20, yPos);
    
    yPos += 15;
    
    // ESG Badge Background
    const badgeColor = data.esgScore >= 70 ? [34, 197, 94] : [239, 68, 68]; // Green or Red
    doc.setFillColor(badgeColor[0], badgeColor[1], badgeColor[2]);
    doc.roundedRect(20, yPos - 8, 70, 20, 5, 5, 'F');
    
    // ESG Badge Text
    doc.setTextColor(255, 255, 255);
    doc.setFontSize(12);
    doc.setFont('helvetica', 'bold');
    const badgeText = data.esgStatus === 'sustainable' ? '✓ Sustainable' : '⚠ Needs Improvement';
    doc.text(badgeText, 55, yPos + 2, { align: 'center' });
    
    // Score
    doc.setTextColor(0, 0, 0);
    doc.setFontSize(14);
    doc.text(`Score: ${data.esgScore}/100`, 100, yPos + 2);
    
    yPos += 30;
    
    // ESG Metrics
    doc.setFont('helvetica', 'normal');
    doc.setFontSize(10);
    doc.text(`Carbon Footprint: ${data.esgData.carbon_footprint_kg.toFixed(2)} kg CO₂`, 20, yPos);
    yPos += 8;
    doc.text(`Total Distance: ${data.esgData.total_distance_km.toFixed(0)} km`, 20, yPos);
    yPos += 8;
    doc.text(`CO₂ Saved vs Traditional: ${data.esgData.co2_saved_vs_traditional.toFixed(2)} kg`, 20, yPos);
    yPos += 8;
    doc.text(`Supply Chain Steps: ${data.esgData.total_steps}`, 20, yPos);
    yPos += 8;
    
    // Impact Message
    if (data.esgData.impact_message) {
      doc.setFont('helvetica', 'italic');
      doc.text(`Impact: ${data.esgData.impact_message}`, 20, yPos);
      yPos += 8;
    }
    
    yPos += 10;
  }
  
  // Blockchain Verification
  doc.setTextColor(0, 0, 0);
  doc.setFont('helvetica', 'bold');
  doc.text('Blockchain Verification:', 20, yPos + 5);
  
  yPos += 15;
  doc.setFont('helvetica', 'normal');
  doc.text('✓ Verified on Internet Computer Protocol (ICP)', 20, yPos);
  yPos += 10;
  doc.text('✓ Immutable supply chain records', 20, yPos);
  yPos += 10;
  doc.text('✓ Tamper-proof transparency', 20, yPos);
  
  // Footer
  const footerY = 270;
  doc.setFillColor(240, 240, 240);
  doc.rect(0, footerY, 210, 27, 'F');
  
  doc.setTextColor(100, 100, 100);
  doc.setFontSize(10);
  doc.text('Generated by BlockTrace - Blockchain Supply Chain Transparency', 105, footerY + 10, { align: 'center' });
  doc.text(`Certificate generated on: ${new Date().toLocaleDateString()}`, 105, footerY + 20, { align: 'center' });
  
  // Download
  doc.save(`blocktrace-passport-${data.tokenId}.pdf`);
};